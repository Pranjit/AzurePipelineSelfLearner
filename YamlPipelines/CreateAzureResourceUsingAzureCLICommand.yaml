# CreateAzureResourceUsingAzureCLICommand.yaml
trigger:
- none
pool:
  name: 'Selfhosted'

parameters:  
  - name: environment
    type: string
    default: dev    
    values:
      - dev
      - test
      - prod  
    displayName: Select Environment
variables:
    selectedEnv: ${{ parameters.environment }}
    TF_WORKING_DIR: 'terraform'

stages:
  - stage: Terraform
    displayName: "Terraform Deployment"
    jobs:
      - job: TerraformJob
        displayName: "Run Terraform to Create Resource Group"
        steps:
          # Step 1: Install Terraform CLI
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '1.5.7'

          # Step 2: Initialize Terraform
          - script: |
              cd $(TF_WORKING_DIR)
              terraform init
            displayName: 'Terraform Init'

          # Step 3: Terraform Validate
          - script: |
              cd $(TF_WORKING_DIR)
              terraform validate
            displayName: 'Terraform Validate'

          # Step 4: Terraform Plan
          - script: |
              terraform -chdir=$(TF_WORKING_DIR) plan -out=tfplan -var "subscription_id=$(AZURE_SUBSCRIPTION_ID)" -var "client_id=$(AZURE_CLIENT_ID)" -var "client_secret=$(AZURE_CLIENT_SECRET)" -var "tenant_id=$(AZURE_TENANT_ID)"
            displayName: 'Terraform Plan'

          # Step 5: Terraform Apply
          - script: |
              cd $(TF_WORKING_DIR)
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'
